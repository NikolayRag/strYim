
!test 2: +0 "src\kiTelnet.py" kii 16/10/28 20:48:47
	test

!network, unsure 6: +0 "..\..\Application Data\Sublime Text 3\Packages\stryim\kiTelnet.py" kii 16/11/05 23:18:34
	think of telnet over route

+network 7: +1 "..\..\Application Data\Sublime Text 3\Packages\stryim\kiTelnet.py" user 16/10/28 23:26:41
	start sending telnet ONLY after TCP started listening

 telnet 8: +0 "..\..\Application Data\Sublime Text 3\Packages\stryim\kiTelnet.py" user 16/11/21 00:49:41
	check for timeout

+code 11: +0 "..\..\Application Data\Sublime Text 3\Packages\stryim\kiTelnet.py" user 16/10/29 20:09:13
	call telnet unblocking

!clean, network 16: +0 "" user 16/10/31 06:45:59
	outdated

+clean, network 17: +0 "..\..\Application Data\Sublime Text 3\Packages\stryim\kiYiListener.py" user 16/10/29 21:29:24
	make sure KiTelnet recreated

+telnet 19: +0 "..\..\Application Data\Sublime Text 3\Packages\stryim\kiTelnet.py" user 16/11/01 15:15:06
	get telnet finish elseway

+telnet, log 20: +0 "..\..\Application Data\Sublime Text 3\Packages\stryim\kiTelnet.py" kii 16/10/30 15:53:35
	use log elseway

!telnet 23: +0 "" user 16/10/31 03:58:52
	add timeout for blankNone

=read, cam 31: +0 "..\..\Application Data\Sublime Text 3\Packages\stryim\kiYiListener.py" user 16/11/10 02:16:05
	check 999+ file switch

 read, cam 33: +0 "..\..\Application Data\Sublime Text 3\Packages\stryim\kiYiListener.py" user 16/11/04 20:21:34
	detect buffer overrun

 read, cam 34: +0 "..\..\Application Data\Sublime Text 3\Packages\stryim\kiYiListener.py" user 16/11/04 20:21:54
	detect buffer underrun

+transit 35: +0 "..\..\Application Data\Sublime Text 3\Packages\stryim\byteTransit.py" user 16/11/05 04:51:40
	add trigger functionality

+transit, clean 37: +0 "..\..\Application Data\Sublime Text 3\Packages\stryim\byteTransit.py" user 16/11/05 18:07:26
	remove dried context more precisely

+cam 39: +0 "..\..\Application Data\Sublime Text 3\Packages\stryim\kiYiListener.py" user 16/11/06 00:41:16
	add on-off, live-dead callbacks to start()

+cam 40: +0 "..\..\Application Data\Sublime Text 3\Packages\stryim\kiYiListener.py" user 16/11/06 00:44:37
	add mp4Buffer argument to live()

!cam 41: +0 "" user 16/11/06 00:45:39
	spoiled

+recover 44: +0 "..\..\Application Data\Sublime Text 3\Packages\stryim\stryim.py" user 16/11/07 03:33:04
	move start position as data recovered

+stage 46: +0 "" kii 16/11/06 15:45:43
	stage: continuous read

+stage 47: +0 "" kii 16/11/07 05:24:32
	stage: recover

+stage 48: +0 "" kii 16/11/21 00:52:19
	stage: mux

-stage, output 49: +0 "" kii 16/11/06 15:47:22
	stage: send to rtmp

-stage, output 50: +0 "" kii 16/11/06 15:47:34
	stage: rtmp server

 cam 53: +0 "..\..\Application Data\Sublime Text 3\Packages\stryim\kiYiListener.py" user 16/11/07 02:49:46
	force kill data sending at dead()

+recover, callback 55: +1 "..\..\Application Data\Sublime Text 3\Packages\stryim\mp4RecoverExe.py" user 16/11/08 19:21:09
	send atom data, not only meta

+speed, bytes 61: +0 "..\..\Application Data\Sublime Text 3\Packages\stryim\byteTransit.py" user 16/11/08 17:15:04
	dont use adding bytes

 speed, bytes 62: +0 "..\..\Application Data\Sublime Text 3\Packages\stryim\byteTransit.py" user 16/11/08 17:25:49
	read more quickly maybe

!general 63: +0 "..\..\Application Data\Sublime Text 3\Packages\stryim\mp4RecoverExe.py" kii 16/11/09 10:34:21
	

+mp4 64: +0 "..\..\Application Data\Sublime Text 3\Packages\stryim\mp4RecoverExe.py" user 16/11/16 23:20:08
	allow start only from IDR frame

 cam, stability 68: -1 "..\..\Application Data\Sublime Text 3\Packages\stryim\kiYiListener.py" user 16/11/10 02:46:42
	found other way to forget stopped file as live

!mp4 79: +0 "" user 16/11/20 15:04:24
	redundant

-flv 90: +0 "..\..\Application Data\Sublime Text 3\Packages\stryim\stryim.py" user 16/11/21 06:22:44
	construct META

+flv 91: +0 "..\..\Application Data\Sublime Text 3\Packages\stryim\stryim.py" user 16/11/20 01:28:05
	construct AVCDecoderConfigurationRecord

+flv 92: +0 "..\..\Application Data\Sublime Text 3\Packages\stryim\stryim.py" user 16/11/19 07:15:35
	make class non-static

+flv 93: +0 "..\..\Application Data\Sublime Text 3\Packages\stryim\stryim.py" user 16/11/19 08:23:59
	make data flow without overhead

=app 94: +2 "..\..\Application Data\Sublime Text 3\Packages\stryim\stryim.py" user 16/11/19 08:24:30
	handle start-stops

+bytes 95: +0 "..\..\Application Data\Sublime Text 3\Packages\stryim\mp4RecoverExe.py" user 16/11/21 01:57:58
	move use of byteTransit inside mp4RecoverExe

-flv 98: +0 "..\..\Application Data\Sublime Text 3\Packages\stryim\stryim.py" user 16/11/21 06:22:57
	build SPS and PPS

-aac 99: +1 "..\..\Application Data\Sublime Text 3\Packages\stryim\stryim.py" user 16/11/21 00:50:01
	AAC header is reverse-engineered, ensure it is correct

!aac 100: +0 "" user 16/11/20 15:04:38
	redundant

=recover 101: +2 "..\..\Application Data\Sublime Text 3\Packages\stryim\mp4RecoverExe.py" user 16/11/20 15:05:06
	use native atoms searching: [h264, aac, ...]

+bytes 102: +0 "..\..\Application Data\Sublime Text 3\Packages\stryim\byteTransit.py" user 16/11/21 01:23:24
	make .add() the single public method

 clean, release 104: +0 "..\..\Application Data\Sublime Text 3\Packages\stryim\stryim.py" user 16/11/21 08:33:48
	use 'current' folder for release and hide ffmpeg

 sink, unsure 105: -1 "..\..\Application Data\Sublime Text 3\Packages\stryim\stryim.py" user 16/11/21 08:35:13
	hardcode RTMP protocol


Reserved: 106